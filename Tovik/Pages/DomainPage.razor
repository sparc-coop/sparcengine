@page "/domains/{Id}"
@layout MainLayout

<PageTitle>Tovik | @(Domain != null ? Domain.Domain : "Your Domain")</PageTitle>

<article class="domain-page">
    <div class="page-container">
        <div class="back">
            <button class="back-btn secondary-btn" @onclick=NavBack><ArrowLeftIcon /> Back</button>
        </div>
        <section class="domain-summary">
            <header>
                <h3>Domain Summary</h3>
                <p class="subheader">Review selected domain. Press Check Connection to ensure Tovik was installed correctly to below domain.</p>
            </header>
            <div>
                <table>
                    <tbody>
                        @if (Domain != null)
                        {
                            <DomainCard Domain=Domain PageType="domain" OnDelete=DeleteDomain />
                        }
                    </tbody>
                </table>
            </div>
            <div class="btn-container">
                <button class="connection-btn primary-btn">Check Connection</button>
            </div>
        </section>
        <section class="add-glossary">
            <header>
                <h3>Add a Glossary</h3>
                <p class="subheader">There’s no limit to the number of domains you can add.</p>
            </header>
            <form>
                <label>
                    <input type="text" placeholder="Enter a glossary name" />
                </label>
                <div class="btn-container">
                    <button class="add-btn primary-btn">Add Glossary</button>
                </div>
            </form>
        </section>
        <section class="glossary-list">
            <header>
                <h3>Glossary List</h3>
                <p class="subheader">You can add or remove glossaries at anytime.</p>
            </header>
            <table class="glossary-table">
                <thead>
                    <tr>
                        <td>Glossary</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var glossary in Glossaries)
                    {
                        <tr>
                            <td>@glossary</td>
                            <td>
                                <div class="glossary-actions">
                                    <button class="edit-glossary-btn secondary-btn"><EditIcon /></button>
                                    <button class="delete-glossary-btn secondary-btn"><TrashIcon /></button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </section>
    </div>
</article>

@inject IRepository<SparcDomain> SparcDomains

@code {
    [Parameter] public string? Id { get; set; }

    private List<SparcDomain> Domains = new();
    SparcDomain? Domain;

    private List<string> Glossaries = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDomains();
        Domain = await SparcDomains.Query
            .Where(d => d.Id == Id)
            .FirstOrDefaultAsync();

        Glossaries.AddRange(new[] { "Lorem Ipsum", "Dolor Sit Amet", "Consectetur Adipiscing Elit" });
    }

    private async Task LoadDomains()
    {
        Domains = await SparcDomains.Query.ToListAsync();
        StateHasChanged();
    }

    private async Task DeleteDomain()
    {
        if (Domain != null)
        {
            await SparcDomains.DeleteAsync(Domain);
            //await LoadDomains();
        }
    }

    private void NavBack()
    {
        Js.InvokeVoidAsync("goBack");
    }
}