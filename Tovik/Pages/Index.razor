@page "/"
@layout MainLayout

<PageTitle>Tovik</PageTitle>

<article class="home">
    <div class="page-container">

        <section class="word-usage">
            <header>
                <h3>Word Usage</h3>
                <p class="subheader">Tovik includes 100,000 words by default. If you need additional words, you can purchase a word pack anytime.</p>
            </header>
            <div>
                <h4>Remaining words</h4>
                <UsageMeter Usage=Usage Limit=Limit />
            </div>
            <div class="btn-container">
                <button class="purchase-btn primary-btn">Purchase a Word Pack</button>
            </div>
        </section>

        <section class="add-domain">
            <header>
                <h3>Add a Domain</h3>
                <p class="subheader">There’s no limit to the number of domains you can add.</p>
            </header>

            <form @onsubmit="AddDomain">
                <label>
                    <input type="text" placeholder="Enter a domain name" @bind="NewDomain.Domain" />
                </label>
                <div class="btn-container">
                    <button class="add-btn primary-btn">Add Domain</button>
                </div>
            </form>
        </section>

        <section class="manage-domains">
            <header>
                <h3>Manage Domains</h3>
                <p class="subheader">You can add or remove domains at anytime.</p>
            </header>
            <table class="domains-table">
                <thead>
                    <tr>
                        <td>Your Domain</td>
                        <td>Usage</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var domain in Domains)
                    {
                        <DomainCard Domain=domain PageType="home" OnDelete=DeleteDomain />
                    }
                </tbody>
            </table>
        </section>

    </div>
</article>

@inject IRepository<SparcDomain> SparcDomains
@inject Tovik.Services.TovikDomainService TovikDomainService
@code {
    private List<SparcDomain> Domains = new();
    private SparcDomain NewDomain = new SparcDomain("");

    int Usage;
    int Limit;

    protected override async Task OnInitializedAsync()
    {
        await LoadDomains();
        //await TovikDomainService.UpdateWordCountForDomains();
        if (Domains.Count > 0)
        {
            Usage = Domains.Sum(d => d.TotalUsage);
            Limit = 100000;
        }
    }

    private async Task LoadDomains()
    {
        Domains = await SparcDomains.Query.ToListAsync();
        StateHasChanged();
    }

    private async Task AddDomain()
    {
        if (string.IsNullOrWhiteSpace(NewDomain.Domain))
        {
            return;
        }
        await SparcDomains.AddAsync(NewDomain);
        NewDomain = new SparcDomain("");
        await LoadDomains();
    }

    private async Task DeleteDomain(SparcDomain domain)
    {
        await SparcDomains.DeleteAsync(domain);
        await LoadDomains();
    }
}