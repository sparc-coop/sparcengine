@using System.Net

<div class="code-block @(CanCopy ? "can-copy" : "")">
    <div class="code-text" @ref=HtmlRef style="display: none;">
        @ChildContent
    </div>

    <pre>
        <code @ref=CodeRef class="language-html">
        </code>
    </pre>

    @if (CanCopy)
    {
        <div class="btn-container @(isCopied ? "copied" : "")">
            <button class="copy-btn icon-btn" @onclick=Copy><CopyIcon /></button>
            <div class="copy-msg">
                @if (isCopied)
                {
                    <span>Copied!</span>
                }
                else
                {
                    <span>Copy</span>
                }
            </div>
        </div>
    }
</div>

@inject IJSRuntime Js
@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public bool CanCopy { get; set; }
    bool isCopied = false;

    ElementReference HtmlRef;
    ElementReference CodeRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Js.InvokeVoidAsync("populatePreviewCode", HtmlRef, CodeRef);

        // if (HtmlRef != null)
        //     await Js.InvokeVoidAsync("populatePreviewCode", HtmlRef, CodeRef);
        // else if (firstRender)
        //     await Js.InvokeVoidAsync("highlight", CodeRef);
    }

    async Task Copy()
    {
        Console.WriteLine("Copy");
        if (ChildContent != null)
        {
            // await Js.InvokeAsync<string>("copyToClipboard", ChildContent.ToString());
            await Js.InvokeAsync<string>("copyToClipboard", HtmlRef);
            isCopied = true;
            StateHasChanged();
            await Task.Delay(3000);
            isCopied = false;
        }
    }
}