@page "/"
@page "/home"
@using Sparc.Blossom.Authentication
@using Sparc.Engine.Aura
@using Sparc.Engine.Billing
@using Tovik.Installation
@layout HomeLayout

<PageTitle>Tovik</PageTitle>


@if (Avatar != null)
{
    <article class="home">
        <div class="page-container">
            <section class="demo">
                <header>
                    <img src="/images/site-frame.svg" alt="Web browser facade" />
                </header>
                <div>
                    <h1>Your Website, Multilingual in Minutes</h1>
                    <p>
                        Tovik is a simple website plugin that turns your entire site multilingual with just one line of code.
                    </p>
                    <CodeBlock CanCopy=true>
                        @("<script type=\"module\" src=\"https://tovik.app/tovik.js\"></script>")
                    </CodeBlock>
                    <p>
                        Once installed, Tovik instantly recognizes your visitors' native language and automatically translates your entire site for them--no translation plugin needed on their end. It’s quick, painless to install, and it helps you connect with more folks around the world. 

                    </p>

                    <h2>See This Site in 130+ Languages, thanks to Tovik:</h2>
                    <Sparc.Blossom.SparcEngine.Tovik.LanguageSelector Avatar="Avatar" />
                </div>
            </section>

            <div class="two">
                <section class="trial">
                    <img src="/images/Star.svg" alt="Star" />
                    <div>
                        <h2>
                            Try Tovik
                            <span>Free!</span>
                        </h2>
                        <ul>
                            <li>Up to <b>1,000</b> words</li>
                            <li>No strings attached</li>
                            <li>No expiration date</li>
                            <li>No invasive user tracking</li>
                            <li>No login required</li>
                        </ul>

                        @if (Error != null)
                        {
                            <div class="error-message">@Error</div>
                        }


                        <footer>
                            <label>
                                Your website's domain name:
                                <input type="text" placeholder="mywebsite.com" @bind="NewDomain" @bind:event="oninput" />
                            </label>
                            <button class="add-btn primary-btn" disabled="@(string.IsNullOrWhiteSpace(NewDomain))" @onclick=AddDomain>Try Tovik</button>
                        </footer>
                    </div>
                </section>

                @if (Product != null)
                {
                    <section class="trial">
                        <img src="/images/Star.svg" alt="Star" />
                        <div>
                            <h2>
                                Buy Tovik
                                <span>@Product.FormattedPrice</span>
                            </h2>
                            <ul>
                                <li>Up to <b>100,000</b> words</li>
                                <li>One-time payment, no subscription</li>
                                <li>No invasive user tracking</li>
                                <li>Unlimited domain names</li>
                                <li>Buy in your native currency</li>
                                <li>No login required</li>
                            </ul>

                            <footer>
                                <button class="add-btn primary-btn" @onclick=Buy>Buy Tovik</button>
                            </footer>
                        </div>
                    </section>
                }
            </div>

        </div>
    </article>
}

@inject Tovik.Domains.TovikDomains TovikDomains
@inject ISparcAura Aura
@inject ISparcBilling Billing
@inject IConfiguration Config

@code {
    BlossomAvatar? Avatar;
    string NewDomain = "";
    string? Error;
    GetProductResponse? Product;

    protected override async Task OnInitializedAsync()
    {
        var user = await Aura.UserInfo();
        if (!Nav.Uri.Contains("home") && user.HasProduct("Tovik"))
            Start();

        Avatar = user.Avatar;
        Product = await Billing.GetProductAsync(Config["ProductId"]!);
    }

    void Start()
    {
        Nav.NavigateTo("/sites");
    }

    async Task Buy()
    {
        var totp = await Aura.GetSparcCode();
        if (totp != null)
            Nav.NavigateTo($"{Config["SparcStore"]}?_auth=totp:{totp.Code}");
    }

    private async Task AddDomain()
    {
        if (string.IsNullOrWhiteSpace(NewDomain))
            return;

        Error = null;
        try
        {
            await TovikDomains.RegisterAsync(NewDomain);
            NewDomain = "";
            Nav.NavigateTo("/sites");
        }
        catch (Exception ex)
        {
            Error = ex.Message;
            NewDomain = "";
        }
    }
}