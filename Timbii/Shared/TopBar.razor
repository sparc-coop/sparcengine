@if (Page == "Chats")
{
    <nav class="top-bar chats-page">
        <div class="left">
            <h2>Chats</h2>
        </div>
        <div class="right">
            <button class="add-btn icon-btn"><MessageAddIcon /></button>
            <button class="search-btn icon-btn"><SearchIcon /></button>
        </div>
    </nav>
}

@if (Page == "Chat")
{
    <nav class="top-bar chat-page">
        <div class="left">
            <button class="back-btn icon-btn" @onclick='() => Nav.NavigateTo("/chats")'><ArrowLeftIcon Color="#7A7A7A" /></button>
            <div class="user-card">
                <div class="user-img">
                </div>
                <div class="user-info">
                    <h4>FirstName LastName</h4>
                </div>
            </div>
        </div>
        <div class="right chat-actions">
            <button class="voice-btn icon-btn" @onclick=ToggleVoiceMode><VoiceModeIcon VoiceMode=voiceMode /></button>
            <button class="more-btn icon-btn"><MenuIcon /></button>
        </div>
    </nav>
}

@if (Page == "New Chat")
{
    <nav class="top-bar new-chat">
        <div class="left">
            <button class="back-btn icon-btn" @onclick='() => Nav.NavigateTo("/chats")'><ArrowLeftIcon Color="#7A7A7A" /></button>
            <h2>Start New Chat</h2>
        </div>
        <div class="right">
            <button class="add-btn icon-btn"><UserAddIcon /></button>
        </div>
    </nav>
}

@code {
    [Parameter] public string Page { get; set; }
    [Parameter] public EventCallback<bool> OnToggleVoiceMode { get; set; }
    bool voiceMode = false;

    void ToggleVoiceMode()
    {
        voiceMode = !voiceMode;
        OnToggleVoiceMode.InvokeAsync(voiceMode);
    }
}