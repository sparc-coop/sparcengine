@page "/sites/{Id}"
@using Tovik.Domains
@layout MainLayout

<PageTitle>Tovik | @(Domain != null ? Domain.Domain : "Your Domain")</PageTitle>

<article class="domain-page">
    <div class="page-container">
        <div class="back">
            <button class="back-btn secondary-btn" @onclick=NavBack><ArrowLeftIcon /> Back</button>
        </div>
        <section class="domain-summary">
            <header>
                <h3>Site Summary</h3>
                <p class="subheader">Review your site details below, and double-check that you have installed Tovik correctly on your site.</p>
                <p class="subheader">Need help installing Tovik? 
                    <a href="/Install">Follow our instructions here!</a></p>
            </header>
            <div>
                <table>
                    <thead>
                        <tr>
                            <th>Domain Name</th>
                            <th>Word Usage</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Domain != null)
                        {
                            <DomainCard Domain=Domain PageType="domain" OnDelete=DeleteDomain />
                        }
                    </tbody>
                </table>
            </div>
            <hr />
            <div class="domain-connection">
                <aside class="connection-status">
                    @if (Domain != null)
                    {
                         @if (Domain.DateConnected != null)
                        {
                            <VerifiedIcon /> <span>This domain is connected</span>
                        } else
                        {
                            <span>This domain's connection has not yet been verified. Check connection below.</span>
                        }
                    }
                </aside>
                <div class="connection-loading" style="display: none;">
                </div>
                <div class="btn-container">
                    <button class="connection-btn primary-btn">Check Connection</button>
                </div>
            </div>
        </section>
        <section class="add-exemption">
            <header>
                <h3>Add Exempt Words or Phrases</h3>
                <p class="subheader">Do you have any words or phrases on this website that you would like Tovik to ignore? Add them here!</p>
            </header>
            <form>
                <label>
                    <input type="text" placeholder="Enter a word or phrase..." />
                </label>
                <div class="btn-container">
                    <button class="add-btn primary-btn">Add</button>
                </div>
            </form>
        </section>
        <section class="exemptions">
            <header>
                <h3>Exempt Words and Phrases</h3>
            </header>
            <table class="exempt-table">
                <thead>
                    <tr>
                        <td>Word or Phrase</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @if (Domain != null)
                    {
                        @foreach (var word in Domain.Exemptions)
                        {
                            <tr>
                                <td>@word</td>
                                <td>
                                    <div class="exempt-actions">
                                        <button class="edit-exempt-btn secondary-btn"><EditIcon /></button>
                                        <button class="delete-exempt-btn secondary-btn"><TrashIcon /></button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </section>
    </div>
</article>

@inject TovikDomains TovikDomains

@code {
    [Parameter] public required string Id { get; set; }

    SparcDomain? Domain;

    private List<string> Glossaries = new();

    protected override async Task OnInitializedAsync()
    {
        Domain = await TovikDomains.Get(Id);
        Glossaries.AddRange(new[] { "Lorem Ipsum", "Dolor Sit Amet", "Consectetur Adipiscing Elit" });
    }

    private async Task DeleteDomain()
    {
        if (Domain != null)
        {
            await TovikDomains.Delete(Id);
        }
    }

    private void NavBack()
    {
        Js.InvokeVoidAsync("goBack");
    }
}